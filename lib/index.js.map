{"version":3,"sources":["../src/index.js"],"names":["Index","config","obj","Object","assign","onDataChange","bind","flow","init","drawFlow","data","nodes","links","reset","isSetData","e","length","forEach","node","addNode","selected","selectNode","id","link","addLink","Nodes","from","to","nodeID","nodeInfo","deleteNode","sourceNode","targetNode","deleteLink","nodesID","keys","map","x","Math","floor","y","type","getNodes","getLinks","onChange","Links","linksID","genUUID"],"mappings":"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","file":"index.js","sourcesContent":["import Flow from './topoflow';\nimport common from './lib/common';\n// 封装外暴露的方法\nclass Index {\n    constructor(config) {\n        let obj = {};\n        Object.assign(obj, config);\n\n        this.config = obj;\n\n        obj.onDataChange = this.onDataChange.bind(this);\n\n        this.flow = new Flow(obj);\n        this.flow.init();\n        this.drawFlow(this.config.data);\n    }\n\n    // 设置数据\n    setData(data) {\n        this.config.data = data;\n        this.drawFlow(data);\n    }\n\n    // 渲染图形\n    drawFlow() {\n        let nodes = [];\n        let links = [];\n        this.flow.reset();\n        this.flow.isSetData = true;\n\n        try {\n            nodes = this.config.data.nodes;\n            links = this.config.data.links;\n        } catch (e) {\n            return false;\n        }\n\n        if (!!nodes && nodes.length > 0) {\n            nodes.forEach((node) => {\n                this.flow.addNode(node);\n                if (node.selected) {\n                    this.selectNode(node.id);\n                }\n            });\n        }\n\n        // 渲染链接\n        if (!!links && links.length > 0) {\n            links.forEach((link) => {\n                this.flow.addLink(this.flow.Nodes[link.from], this.flow.Nodes[link.to]);\n            });\n        }\n        this.flow.isSetData = false;\n    }\n\n    // 选中一个节点\n    selectNode(nodeID) {\n        this.flow.selectNode(nodeID);\n    }\n\n    // 新增节点\n    addNode(nodeInfo) {\n        return this.flow.addNode(nodeInfo);\n    }\n\n    // 删除节点\n    deleteNode(nodeID) {\n        return this.flow.deleteNode(nodeID);\n    }\n\n    // 新增线条\n    addLink(sourceNode, targetNode) {\n        this.flow.addLink(sourceNode, targetNode);\n    }\n    // 删除节点\n    forceDeleteLink(link) {\n        return this.flow.deleteLink(link, 'force');\n    }\n\n    deleteLink(link) {\n        return this.flow.deleteLink(link);\n    }\n\n    getNodes() {\n        let nodes = this.flow.Nodes;\n        let nodesID = Object.keys(nodes);\n        return nodesID.map((id) => {\n            nodes[id].x = Math.floor(nodes[id].x);\n            nodes[id].y = Math.floor(nodes[id].y);\n            return nodes[id];\n        });\n    }\n\n    onDataChange(type) {\n        let nodes = this.getNodes();\n        let links = this.getLinks();\n        \n        if (!!this.config.onChange) {\n            this.config.onChange({\n                type,\n                nodes,\n                links\n            });\n        }\n    }\n\n    getLinks() {\n        let links = this.flow.Links;\n        let linksID = Object.keys(links);\n        return linksID.map((id) => {\n            return links[id];\n        });\n    }\n\n    genUUID() {\n        return common.genUUID();\n    }\n}\nexport default Index;\n"]}